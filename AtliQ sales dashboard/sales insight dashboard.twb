<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sales' inline='true' name='federated.1on1ios0v0g0r819ug4pc1w8z40z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0694irz1brfpby11n0xy70ud8jv1'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='date' table='[date]' type='table' />
          <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit]' value='[transactions].[profit]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_0E74B6E48CAA45CBAF435EE983FF3696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_4FC98916619644BCAAEBEC5A4BB511B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_4FC98916619644BCAAEBEC5A4BB511B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_4FC98916619644BCAAEBEC5A4BB511B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_C97DE7133C22444EA59838C32EBF26AC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_C97DE7133C22444EA59838C32EBF26AC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_C97DE7133C22444EA59838C32EBF26AC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_C97DE7133C22444EA59838C32EBF26AC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_C97DE7133C22444EA59838C32EBF26AC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_02DF185942D7420B98C1B4C5A33FC7F3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_02DF185942D7420B98C1B4C5A33FC7F3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_02DF185942D7420B98C1B4C5A33FC7F3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_B2E5862FB6E2458EAB9E7D1171237188]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_B2E5862FB6E2458EAB9E7D1171237188]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_4FC98916619644BCAAEBEC5A4BB511B5]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_C97DE7133C22444EA59838C32EBF26AC]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_02DF185942D7420B98C1B4C5A33FC7F3]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_B2E5862FB6E2458EAB9E7D1171237188]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_0E74B6E48CAA45CBAF435EE983FF3696]' role='measure' type='quantitative' />
      <column caption='Cost Price' datatype='real' name='[cost_price]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
      <column caption='Profit Margin' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_4FC98916619644BCAAEBEC5A4BB511B5'>
            <properties context=''>
              <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_C97DE7133C22444EA59838C32EBF26AC'>
            <properties context=''>
              <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_02DF185942D7420B98C1B4C5A33FC7F3'>
            <properties context=''>
              <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_B2E5862FB6E2458EAB9E7D1171237188'>
            <properties context=''>
              <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_0E74B6E48CAA45CBAF435EE983FF3696'>
            <properties context=''>
              <relation connection='mysql.0694irz1brfpby11n0xy70ud8jv1' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_0E74B6E48CAA45CBAF435EE983FF3696' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_4FC98916619644BCAAEBEC5A4BB511B5' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_0E74B6E48CAA45CBAF435EE983FF3696' />
            <second-end-point is-db-set-unique-key='true' object-id='date_C97DE7133C22444EA59838C32EBF26AC' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_0E74B6E48CAA45CBAF435EE983FF3696' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_02DF185942D7420B98C1B4C5A33FC7F3' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_0E74B6E48CAA45CBAF435EE983FF3696' />
            <second-end-point is-db-set-unique-key='true' object-id='products_B2E5862FB6E2458EAB9E7D1171237188' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.01lefyg01mm7vx11jj8az0t382iv'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='date' table='[date]' type='table' />
          <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit]' value='[transactions].[profit]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_8B20B855721B4969A4097F4E0BEC06D6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_BEDDFB16ABA74FBEAAA248D2A5877C75]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_BEDDFB16ABA74FBEAAA248D2A5877C75]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_BEDDFB16ABA74FBEAAA248D2A5877C75]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_29812189170F4624B14398777226C75F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_29812189170F4624B14398777226C75F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_29812189170F4624B14398777226C75F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_29812189170F4624B14398777226C75F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_29812189170F4624B14398777226C75F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_82BDC56E81C44090A723670E03CAAFC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_82BDC56E81C44090A723670E03CAAFC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_82BDC56E81C44090A723670E03CAAFC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_D6E8D63E622A4EF1ADFF31656711081E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_D6E8D63E622A4EF1ADFF31656711081E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]&quot;' value='Revenue' />
        </aliases>
      </column>
      <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Profit Margin %' datatype='real' name='[Calculation_2257147870496182272]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([profit]) /sum( [Calculation_1788210558803709952])' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_BEDDFB16ABA74FBEAAA248D2A5877C75]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_29812189170F4624B14398777226C75F]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_82BDC56E81C44090A723670E03CAAFC2]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_D6E8D63E622A4EF1ADFF31656711081E]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_8B20B855721B4969A4097F4E0BEC06D6]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[pcto:sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2257147870496182272]' derivation='User' name='[usr:Calculation_2257147870496182272:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),MONTH(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[pcto:sum:Calculation_1788210558803709952:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_1788210558803709952' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_BEDDFB16ABA74FBEAAA248D2A5877C75'>
            <properties context=''>
              <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_29812189170F4624B14398777226C75F'>
            <properties context=''>
              <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_82BDC56E81C44090A723670E03CAAFC2'>
            <properties context=''>
              <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_D6E8D63E622A4EF1ADFF31656711081E'>
            <properties context=''>
              <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_8B20B855721B4969A4097F4E0BEC06D6'>
            <properties context=''>
              <relation connection='mysql.01lefyg01mm7vx11jj8az0t382iv' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_8B20B855721B4969A4097F4E0BEC06D6' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_BEDDFB16ABA74FBEAAA248D2A5877C75' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_8B20B855721B4969A4097F4E0BEC06D6' />
            <second-end-point is-db-set-unique-key='true' object-id='date_29812189170F4624B14398777226C75F' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_8B20B855721B4969A4097F4E0BEC06D6' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_82BDC56E81C44090A723670E03CAAFC2' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_8B20B855721B4969A4097F4E0BEC06D6' />
            <second-end-point is-db-set-unique-key='true' object-id='products_D6E8D63E622A4EF1ADFF31656711081E' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_5221CAE1FD264063BB144F73841D921E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_7FE7FB3A43F848C8BA1799EA01094AB6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit analysis' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_5E3AC6A5E53F4A9D8F884460134041CF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit analysis' type='sheet' worksheet='Profit margin by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit analysis' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action13_0848C25FEC46405480E999D0B736BD36]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit analysis' />
      </command>
    </action>
    <action caption='Filter 14 (generated)' name='[Action14_6DD475EA14BC4359A6FA3027BF5A4FFC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit analysis' type='sheet' worksheet='Revenue By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_927BC7C31E7F4DBC8E489B910E4E43B6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Revenue By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_73B64BC739234A519B13109DC098428C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Sales Quantity by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_E0E586FDF20948059623E7A2D465B466]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_0537DD5B0FF6476AABDB2368AE09A548]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_D20B975B5D564787A83247D17829AA9F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Sales Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action9_187400A48BF84C0EB1FA13DC2E5DA543]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Revenue by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_66761EBC07884D7CBCFE87A2AAAA633E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue dashboard' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer table'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_2257147870496182272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit]) /sum( [Calculation_1788210558803709952])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2257147870496182272]' derivation='User' name='[usr:Calculation_2257147870496182272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_5221CAE1FD264063BB144F73841D921E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_6DD475EA14BC4359A6FA3027BF5A4FFC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:custmer_name:nk]</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9B955020-B0E4-4C45-B99B-0941FCBEB5CB}' />
    </worksheet>
    <worksheet name='Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1788210558816964612]' derivation='None' name='[none:Calculation_1788210558816964612:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]' value='11' />
            <format attr='font-weight' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]' value='#606b76' />
            <format attr='font-size' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[mn:cy_date:ok]' value='11' />
            <format attr='font-weight' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[mn:cy_date:ok]' value='#606b76' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:Calculation_1788210558816964612:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{92541684-EAAA-4090-B18D-85B344BA6A18}' />
    </worksheet>
    <worksheet name='Pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[pcto:sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_5221CAE1FD264063BB144F73841D921E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_6DD475EA14BC4359A6FA3027BF5A4FFC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[pcto:sum:Calculation_1788210558803709952:qk]' value='' />
            <format attr='font-size' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='14' />
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]' />
              <wedge-size column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
              <size column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]' />
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[pcto:sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.813093900680542' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]</field>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]</field>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[pcto:sum:Calculation_1788210558803709952:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;E-Commerce&quot;</value>
                <value>240343625.0</value>
                <value>0.24403428656209036</value>
              </tuple>
            </tuple-reference>
            <label-position x='48' y='-51' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]</field>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]</field>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[pcto:sum:Calculation_1788210558803709952:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brick &amp; Mortar&quot;</value>
                <value>744532838.0</value>
                <value>0.75596571343790964</value>
              </tuple>
            </tuple-reference>
            <label-position x='-25' y='64' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{EBB19D39-72D5-4D2C-AC23-4FED43DA3ED2}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_5221CAE1FD264063BB144F73841D921E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_6DD475EA14BC4359A6FA3027BF5A4FFC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:profit:qk]' value='center' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:profit:qk]' value='c#,##0,.00K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontsize='12'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='12'><![CDATA[<[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:profit:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3C84FC9B-75D4-4FAF-BF64-3F4151C50AFE}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_2257147870496182272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit]) /sum( [Calculation_1788210558803709952])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2257147870496182272]' derivation='User' name='[usr:Calculation_2257147870496182272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_5221CAE1FD264063BB144F73841D921E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_6DD475EA14BC4359A6FA3027BF5A4FFC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' value='p0.00%' />
            <format attr='text-align' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='center' />
            <format attr='text-align' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' value='center' />
            <format attr='vertical-align' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' value='auto' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]' />
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]' />
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk] + [federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk])</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[tmn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{CBD47C44-34CE-46DD-A5A5-9EF38631A6BA}' />
    </worksheet>
    <worksheet name='Profit margin by Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Profit Margin By Market</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_2257147870496182272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit]) /sum( [Calculation_1788210558803709952])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2257147870496182272]' derivation='User' name='[usr:Calculation_2257147870496182272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_5221CAE1FD264063BB144F73841D921E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_6DD475EA14BC4359A6FA3027BF5A4FFC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' value='41' />
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' value='108' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' palette='blue_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' />
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]</cols>
      </table>
      <simple-id uuid='{0DB62EE5-0F6C-4D17-8BEE-465120369572}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b'>Total Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='16' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='c#,##0,,.00M' />
            <format attr='height' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#e15759'><![CDATA[<[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EC96E27B-7A20-4435-8C6D-5FC699C24B94}' />
    </worksheet>
    <worksheet name='Revenue By Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Revenue by Market</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_amount]' derivation='Sum' name='[sum:sales_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' value='41' />
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='c#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_amount:qk]</cols>
      </table>
      <simple-id uuid='{A807668F-0BEC-4FF2-8F20-EE7D8627AD7A}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Revenue by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_927BC7C31E7F4DBC8E489B910E4E43B6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' field-type='quantitative' max='47767065.25678046' min='-1979948.8344778195' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='c#,##0,.00K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]</rows>
        <cols>([federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok] / [federated.1rmoj9n1c5emj010azrbj04v0tt2].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{A569AE63-8EB0-4E6E-8696-699E94AB0D30}' />
    </worksheet>
    <worksheet name='Sales Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_qty:qk]' value='c#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontsize='16'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='16'><![CDATA[<[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{85781743-9CDC-45F0-95EB-F0C972E90065}' />
    </worksheet>
    <worksheet name='Sales Quantity by Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sales Quantity by Markets </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_927BC7C31E7F4DBC8E489B910E4E43B6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{605E3C61-70ED-4505-88E9-7C1B1F3CA742}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1788210558803709952])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Acclaimed Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;All-Out&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Atlas Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Control&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsara Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsbea Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalslance Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalslytical&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsocity&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsopedia Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Electricalsquipo Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Elite&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Epic Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Excel Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Expression&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Flawless Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Forward Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Info Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Insight&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Integration Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Leader&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Logic Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Modular&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Nixon&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Nomad Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Novus&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Path&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Power&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Premium Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Propel&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Relief&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Sage&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Sound&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Surface Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Surge Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Synthetic&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Unity Stores&quot;' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='&quot;Zone&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='font-size' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='14' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='c#,##0,.00K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6ba7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:custmer_name:nk]</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]</cols>
      </table>
      <simple-id uuid='{AA955696-D309-4822-A34F-160EFE3988C3}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1788210558803709952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] ==&apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount]END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1788210558803709952]' derivation='Sum' name='[sum:Calculation_1788210558803709952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1613D5FC138847E5BF497FE4DC11AA7E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1788210558803709952])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod001&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod002&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod003&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod004&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod005&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod006&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod007&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod008&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod009&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod010&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod011&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod012&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod013&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod014&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod015&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod016&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod017&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod018&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod019&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod020&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod021&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod022&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod023&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod024&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod025&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod026&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod027&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod028&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod029&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod030&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod031&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod032&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod033&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod034&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod035&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod036&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod037&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod038&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod039&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod040&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod041&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod042&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod043&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod044&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod045&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod046&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod047&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod048&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod049&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod050&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod051&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod052&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod053&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod054&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod055&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod056&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod057&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod058&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod059&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod060&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod061&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod062&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod063&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod064&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod065&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod066&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod067&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod068&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod069&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod070&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod071&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod072&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod073&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod074&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod075&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod076&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod077&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod078&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod079&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod080&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod081&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod082&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod083&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod084&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod085&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod086&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod087&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod088&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod089&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod090&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod091&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod092&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod093&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod094&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod095&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod096&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod097&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod098&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod099&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod100&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod101&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod102&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod103&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod104&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod105&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod106&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod107&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod108&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod109&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod110&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod111&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod112&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod113&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod114&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod115&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod116&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod117&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod118&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod119&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod120&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod121&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod122&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod123&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod124&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod125&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod126&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod127&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod128&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod129&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod130&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod131&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod132&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod133&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod134&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod135&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod136&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod137&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod138&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod139&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod140&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod141&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod142&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod143&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod144&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod145&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod146&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod147&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod148&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod149&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod150&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod151&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod152&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod153&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod154&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod155&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod156&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod157&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod158&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod159&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod160&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod161&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod162&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod163&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod164&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod165&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod166&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod167&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod168&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod169&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod170&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod171&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod172&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod173&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod174&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod175&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod176&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod177&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod178&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod179&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod180&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod181&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod182&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod183&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod184&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod185&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod186&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod187&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod188&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod189&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod190&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod191&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod192&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod193&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod194&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod195&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod196&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod197&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod198&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod199&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod200&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod201&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod202&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod203&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod204&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod205&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod206&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod207&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod208&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod209&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod210&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod211&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod212&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod213&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod214&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod215&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod216&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod217&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod218&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod219&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod220&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod221&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod222&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod223&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod224&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod225&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod226&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod227&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod228&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod229&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod230&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod231&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod232&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod233&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod234&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod235&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod236&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod237&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod238&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod239&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod240&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod241&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod242&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod243&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod244&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod245&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod246&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod247&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod248&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod249&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod250&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod251&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod252&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod253&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod254&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod255&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod256&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod257&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod258&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod259&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod260&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod261&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod262&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod263&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod264&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod265&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod266&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod267&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod268&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod269&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod270&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod271&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod272&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod273&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod274&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod275&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod276&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod277&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod278&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod279&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod280&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod281&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod282&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod283&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod284&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod285&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod286&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod287&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod288&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod289&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod290&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod291&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod292&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod293&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod294&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod295&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod296&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod297&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod298&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod300&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod301&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod302&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod303&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod304&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod305&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod306&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod307&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod308&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod309&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod310&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod311&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod312&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod313&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod314&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod315&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod316&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod317&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod318&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod319&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod320&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod321&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod322&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod323&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod324&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod325&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod326&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod327&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod328&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod329&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod330&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod331&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod332&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod333&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod334&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod335&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod336&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod337&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod338&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod339&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:product_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:product_code:nk]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='10' />
            <format attr='text-format' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' value='c#,##0,.00K' />
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#9d7660' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:product_code:nk]</rows>
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]</cols>
      </table>
      <simple-id uuid='{A8D48BCC-C54D-4FD1-85C5-CC9BB9C35826}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1rmoj9n1c5emj010azrbj04v0tt2' />
          </datasources>
          <datasource-dependencies datasource='federated.1rmoj9n1c5emj010azrbj04v0tt2'>
            <column caption='Blank' datatype='string' name='[Calculation_1788210558816964612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1788210558816964612]' derivation='None' name='[none:Calculation_1788210558816964612:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_F90B6AD9C5F0478B98056FBF9F81C961]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1788210558816964612]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_73B64BC739234A519B13109DC098428C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-weight' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:Calculation_1788210558816964612:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{64C42872-4EC8-4CB3-BC03-87571D70A3E2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Profit analysis'>
      <style />
      <size maxheight='868' maxwidth='1666' minheight='868' minwidth='1666' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='5184' id='5' name='Year' show-title='false' w='19546' x='39824' y='6106' />
        <zone h='4153' id='6' name='Months' show-title='false' w='42949' x='23932' y='10325' />
        <zone h='7943' id='7' name='Revenue' show-title='false' w='12299' x='952' y='14974' />
        <zone h='76543' id='8' name='Revenue By Markets' w='25453' x='117' y='23120' />
        <zone h='76382' id='9' name='Profit margin by Markets' w='27011' x='24250' y='23157' />
        <zone h='44009' id='18' name='Profit Trend' show-title='false' w='48860' x='51020' y='17166' />
        <zone h='36060' id='19' name='Customer table' show-title='false' w='30912' x='51080' y='62903' />
        <zone h='33295' id='20' name='Pie chart' show-title='false' w='24070' x='76471' y='65323' />
        <zone h='6567' id='21' name='Profit' show-title='false' w='9784' x='12845' y='15783' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='24' param='vert' type-v2='layout-flow' w='99040' x='480' y='922'>
                <zone fixed-size='45' h='5184' id='5' is-fixed='true' name='Year' show-title='false' w='19546' x='39824' y='6106'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='36' h='4153' id='6' is-fixed='true' name='Months' show-title='false' w='42949' x='23932' y='10325'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='69' h='7943' id='7' is-fixed='true' name='Revenue' show-title='false' w='12299' x='952' y='14974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='6567' id='21' is-fixed='true' name='Profit' show-title='false' w='9784' x='12845' y='15783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44009' id='18' is-fixed='true' name='Profit Trend' show-title='false' w='48860' x='51020' y='17166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76543' id='8' is-fixed='true' name='Revenue By Markets' w='25453' x='117' y='23120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76382' id='9' is-fixed='true' name='Profit margin by Markets' w='27011' x='24250' y='23157'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36060' id='19' is-fixed='true' name='Customer table' show-title='false' w='30912' x='51080' y='62903'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33295' id='20' is-fixed='true' name='Pie chart' show-title='false' w='24070' x='76471' y='65323'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{91E1A9D8-8C88-45E8-A65F-20CBE7F890D4}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Revenue dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='6061' id='3' name='Year' show-title='false' w='18575' x='40317' y='5163' />
        <zone h='5275' id='4' name='Months' show-title='false' w='43066' x='2926' y='12682' />
        <zone h='6958' id='5' name='Revenue' show-title='false' w='13103' x='59899' y='12346' />
        <zone h='8418' id='6' name='Sales Quantity' show-title='false' w='12887' x='75018' y='12570' />
        <zone h='76094' id='7' name='Revenue By Markets' w='22411' x='234' y='17845' />
        <zone h='76094' id='8' name='Sales Quantity by Markets' w='24517' x='22352' y='17957' />
        <zone h='36925' id='9' name='Top 5 Customers' w='26998' x='46796' y='57464' />
        <zone h='35466' id='10' name='Top 5 Products' w='26214' x='73844' y='58586' />
        <zone h='38272' id='11' name='Revenue by Year' w='51609' x='46987' y='19304' />
        <zone h='8530' id='12' name='Revenue by Year' pane-specification-id='0' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' type-v2='color' w='8192' x='89936' y='12121' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98204' id='27' param='vert' type-v2='layout-flow' w='99064' x='468' y='898'>
                <zone fixed-size='49' h='6061' id='3' is-fixed='true' name='Year' show-title='false' w='18575' x='40317' y='5163'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='55' h='6958' id='5' is-fixed='true' name='Revenue' show-title='false' w='13103' x='59899' y='12346'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='67' h='8418' id='6' is-fixed='true' name='Sales Quantity' show-title='false' w='12887' x='75018' y='12570'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='43' h='5275' id='4' is-fixed='true' name='Months' show-title='false' w='43066' x='2926' y='12682'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76094' id='7' is-fixed='true' name='Revenue By Markets' w='22411' x='234' y='17845'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76094' id='8' is-fixed='true' name='Sales Quantity by Markets' w='24517' x='22352' y='17957'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38272' id='11' is-fixed='true' name='Revenue by Year' w='51609' x='46987' y='19304'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8530' id='12' name='Revenue by Year' pane-specification-id='0' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' type-v2='color' w='8192' x='89936' y='12121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36925' id='9' is-fixed='true' name='Top 5 Customers' w='26998' x='46796' y='57464'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35466' id='10' is-fixed='true' name='Top 5 Products' w='26214' x='73844' y='58586'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{144E7D08-F461-4C45-B763-7B56A71E0E12}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0F8C2046-9053-4C3D-8F73-9509348E494C}' />
    </window>
    <window class='worksheet' name='Sales Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{65EEF93E-EC9C-4126-911C-873F399DC1B4}' />
    </window>
    <window class='worksheet' name='Revenue By Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:market_code:nk]</field>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6349E887-F1BF-4A66-BF29-018FDA5F284F}' />
    </window>
    <window class='worksheet' name='Profit margin by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[usr:Calculation_2257147870496182272:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:market_code:nk]</field>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1594035-96D0-4958-9C58-1766C0D79DF7}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BF14C2-B69B-495D-8821-CADBB965927E}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E2CB8B8-0BC5-4BFD-847C-2DBCC24BD112}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:product_code (products):nk]</field>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:product_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA81DE98-4194-4DE6-A1BE-1CFAE2F984F7}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:Calculation_1788210558816964612:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE5CB6D7-F624-478C-B076-12E26190BFA2}' />
    </window>
    <window class='worksheet' name='Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:Calculation_1788210558816964612:nk]</field>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E2D590C-39B3-40C3-8043-561855EC476A}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{437D0FB0-68A9-44D1-AA43-0B6DA5F74F4B}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{25AAF8FF-253C-40EF-8B10-CB38AC8FACB7}' />
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{01678361-8829-42B1-860A-8C452D676532}' />
    </window>
    <window class='worksheet' name='Customer table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E038E11E-2076-4D3F-AA80-3851D1F80E95}' />
    </window>
    <window class='worksheet' name='Pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]</field>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[sum:Calculation_1788210558803709952:qk]</field>
                  <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[pcto:sum:Calculation_1788210558803709952:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brick &amp; Mortar&quot;</value>
                <value>744532838.0</value>
                <value>0.75596571343790964</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88409738-1E8B-46AC-84B5-B503A2810BAE}' />
    </window>
    <window class='dashboard' name='Revenue dashboard'>
      <viewpoints>
        <viewpoint name='Months' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Markets' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity' />
        <viewpoint name='Sales Quantity by Markets' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ED99ED07-CB9D-46B6-AFFB-689C4CF31727}' />
    </window>
    <window class='dashboard' maximized='true' name='Profit analysis'>
      <viewpoints>
        <viewpoint name='Customer table' />
        <viewpoint name='Months' />
        <viewpoint name='Pie chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
          <highlight field='[federated.1rmoj9n1c5emj010azrbj04v0tt2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit margin by Markets' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Markets' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{269EFC87-8A2F-4445-8C6C-D5DCA6EC6F3F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer table' width='192'>
      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
      c3OxWq309PRQWloqssLhcJj19fXnNqJNT0/n5MmT6HQ6scCVnZ2NTqfj448/5tChQ6LDdWZm
      Jh9++CGHDh3CaDTy6quvcuHCBSwWy3diiPubFI/HMZlMvP/++yI99+6775KRkYFUKuXDDz8k
      JyeHcDhMVVWVWAl+yvFVRnLU9QSJzK3Egos3P/yA6YlZarbpqP/Fz6g6+CpHavUsLK2QkVtK
      RnY2SVJIhH10NDWxsh5ix6EjGMwhZi9dZvH0SVJdzVxrl7Hn2GssScIkyaVUH3mFwav3cCbp
      EcIhfJEYcoWKb9nX9XuVRqPhT//0TwkGgwwPD+P1erl06RJGoxGdTkdnZyfZ2dm0tLQQCoWQ
      y+VMTk5is9lYW1sjLy+P/v5+UlNTSU1N5f79+1RXV9PU1IRUKmX37t10dXWJKfNVVVV88skn
      FBQUPBcSuXFUbWxsRKlUUlVVhdVqRavVEg6HuXbtGgBnz57l4cOHFBcX097eLrpSDA0NMTAw
      QHV1NWtra9TX1xMIBJBKpWIuwmYpFotx6dIl5ufnCYVClJSUkJKSQldXF263m6KiItLS0vji
      iy/QarVkZGSIRUS5XM6jR4+2kMjfh1wuF36/H4vF8sxIpCAIGI1+w1RKAAAeL0lEQVTG38Ho
      nk0bldQNEP37rC0kcksvtbaQyC291NpCIrf00uspN8ECicTG2UCC9Pu4IP8Ca+NsK5FIxLPu
      xsFn4/mN5758Zv6m12w83syD15evBCQSiRjPtPE5G3//pnF8+T2+i4Pqv52PL3/+l59/2tg2
      Hj9lB/DzX/7Tf0ZXuo3MghreOrbr33/psyoW5lHXAJUHdrN5cW7fT01NTfGP//iP/MVf/AXX
      rl3D6XRisVjIz8+ntbUVpVLJRx99JKZEdnV1EY/Heeutt7h//z4rKyscPHhQBE9kMhkXLlx4
      rjrAl7VhfnvgwAHS09P5yU9+QlZWFocPH6aoqIhAIMDnn3+Ox+Ph3LlzWK1WHA4HMpmMt956
      i4sXL6JQKDh9+rS4dLpZisVifPrpp/j9fsrKynjllVcA+Oyzz1hfX6eiogKdTse9e/d4/fXX
      icViXLt2jaqqKnJyckhNTRULjU8tM6mz8zl95gwpqSkM3m9Fk1/M/OI6yQEbkzMeUsxVHCuW
      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
      ZZfbyAQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='33' name='Months' width='192'>
      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
      BEX7DwFF1u3LqYa5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie chart' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='48' name='Profit' width='104'>
      iVBORw0KGgoAAAANSUhEUgAAAGgAAAAwCAYAAAD9wT87AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJTklEQVR4nO2ae3BU1R3HP/exd3fzhCCBCIEElRgMSFJ5REUtDEIBW6u0U6WiY8to8TFT
      M46dlvpo7ahjIz4gvkZH7VRsrbRWUkujiAgk6hQMFYMxJgQKeSBJyG72cV+nfywuLJuETYJw
      ofv585xzf+d37veexz2/nySEECRxLPKpdiBJ/yQFcjhJgRxOUiCHkxTI4SQFcjhJgRxOUiCH
      kxTI4SQFcjhJgRxOUiCHo55qB04l1v7thKruxe5sRnKl4L3mWYSvlWBlGdrM5bhLl59qF50p
      ULi6Ar2mIqZMSstGm7oEV/ESJNUz5D5EoIPQO/cjpWaT9qNXkdzpAJi+1ri2VkstwbW34Jn7
      AOrEeUPueyA4UiAASUvDe82zKDkXgmVgNm4k9M592B2NeOY+APIQXbcNRNiPet68qDgA6sR5
      pJ9kEfrj9NiDFBfqeXNxTfoeZuP72B2NCN1P4LUlBCvLwNIJb3kC35PFmPXrARB6D+GND+Nf
      PQPfyiKMunUgbCAyQ/3Pz0H429BrKvCtLMK/eiZWSy1WSy3+1TMJV0dmcLCyjMBrSxC6n2Bl
      Gb6VRfhWFkX7+aZx7AzqFS0dbBNhBJGOKtY/WYP+8QtRAbB0whsexGr/jJTr1iAPz8NfUQqA
      q3AR7tLlaJOvpWfN9biKro3Za6yW2pguvQvLsUqWJpe4hNB9oLqRPJnRIrujEbv1U7Tpy9Au
      uhlJS8XcvRmz4V0833kYOWsCAEruDIxtr6Dmz4p53umcHkucZWB+UYXx2ZuoeZciZ46NVtmd
      zWgX34H74juQtNRI85Yd4E5HGXVBtJ064XLsQ3uxu/acdPeHgmNn0Nd7DACSHDnFTVuGVrwk
      5oCg5l+G6/wFsQ8bgTh7kpYGQhxZBk8THCtQzCmuP2QFpGMWAldKXDOh+0GS4ts6nNPL2wRR
      cqZA2IfVtjNaZja+j5yZizxs3Cn0bOCckQKpudNRz51DeMsT2B2NIGysvR/iKlk6qAOCPDwP
      edg4jLq3EGEfWAaY4W/A8176Pim9nGwUDffsFajjSgmsuQ7f41Nwz/51/F6VIJInE/ecFdgd
      TfgrSvFVlGLuqTnBTvfRdzJx0dmcmTPoDCIpkMNJCuRwkgI5nKRADicpkMNJCuRwkgI5nKRA
      DmfIt9ki2Ile8wxG/duIQEckPD12Gu7ZK3q9mBQ9Bwj85WbsjiaUnAvxXvNsJBTQD/bBBkLv
      PYS1fxvYViT0UHzDkdCDsAmuuwuz4Z34AU6ch3dhOb6VRX3aP14Gj/C3Ed5UjtFQBbaNkl2A
      +9u/it60m/XrI6H349gX/jZ61lyPcvZUvAvLo/VmczWht+7EVbIUd+ltMTfuQxJI+NsJ/Hkp
      cvYkUn7wMvLw8YjAQULrf0nwzdtIWfwiUurIox6w0f/9EnL6aOTMXETo0HH7sPZtI/j3O1En
      XI532QYkTyZ2ZzNm0/sIM4ykqQi9B+Fvi4rRG+k///QY521CVfdhflGFmndJ32MMdRP8x91g
      maTetA4pZQThjQ8T/NvP8H7/GZTRU3pPNBmAfX3rU8gjzkMruTEuHDK0JU6S8Fz5IN6Fv0fO
      yo8E1lJH4ipajN21F6u9Lqa5tX87xuf/RJtxK7i8xzUvjCD6h0+jjCrEPXsFknc4SDJyVj7a
      t26KRlBFuBvb34acdU7CrtudzZi7N6PkTo+JvB6L+eW72O11aKXLkTPGIKke3DOXI3mGY+x4
      vc8AYKL2jdpXsTubcF9WhuTJiKsfkkBS6kiUsRfFqW5370dSXEhHiSB0P+EtT6LmX4ZydnFC
      9sWhvVhtdagT58fYimvnawO9B2VE4gIZO9eC7kcruaHfFC5rTw1S2iiU7MJomZSWjTK6CGv/
      dkSwc9D27QO70Lf/EdfU6/t8Jyc2oipsjB2vE976FK6J82KiocZ/3kD429Cu/E3CUU27owlh
      hrDadqJ/8ir2Vw0AKKMm4bnyt8gjzo10629HGMHIPlBZBooLOTMXbdpPcBVeFf8BdTVj7KpE
      yZ3Rb8RW6H7sQ/+NxJBUd0ydNGw8omkTdvd+lJQRA7dv6YS3rkJKG4VW/OM+38kJE0j42whV
      3Y/ZvBXXpO/ivuIXoGgRhzua0Le9jFZyI/Kw8QMzbJtgm3gXrUTOHIvtayFUeTeBN5aRsvhF
      5Kx81IL5pBfMP+JLsBO9uoLQv+5F+FoiS+pRGHWViGAXrsmLoz4ObtC95zgcz75Zvx5f/XqQ
      FbzzH4ks3X1wQo7ZZsO79LxyNXZHI96rV+GZ+0B0f8DSCdesRk7PwTX52oEbl1VcBQsiJ0JJ
      Rs4Yg/uKe8AIYu7e3Osjknc42qy7UMaUYNStQwQORuuEvx1zVyVKzoUouTMGM9yjOorPcUjE
      vjpxHmm3f4yaO51wzWpEz4E+uxiyQGb9ekJv34NydjEpS15HzZsV47R14HOs3VuiGZtHZ2Ye
      m8V5LF+Hp+3ufbFOp48GLTUSfu4DyeVFSslCGMHILDyMsasSu3sfWskN/e5rEElckTPHRk6b
      x4S4RVczkjsDOW1UTHmi9iWXF/esMkSwi/AHj4Gl99puaMfs0CH0j19AysiJzJpeTiHK6Mmk
      La+OKw9WliF8rf3+B8nZhShZEzDq1qEWLIgO2Pa1ghFAzsiJ+BE4GD3hRX0zgohAB3LKCDic
      bC96DmDsXIsy6gKU3OkJjVEZNxPzyw1Y7XWoeZdG7PjbsVo/Rc6ZjJR61pE+B2hfHnk+2rSf
      Et76JMr4S3AVLopvk5CXfWC11GJ9VY967tzY/51BYjZtwvfE1OiMkjyZaBfdjNW6A716NcIM
      IXoOEN70KFLqWdEXFtr4EMG/3orV9hkIG6H3oFevwmrdEZMoYjZuxO7cg2vy4l4/CuFvw//8
      nGguNoB6zhzk7EL06grs7n0IM0S4pgIR6kQrWRrzURzPfm+4pvwQdUwJ4Q/KsTua4uqHdkg4
      vHzoHz2H/tFzcdXeheWJ5zILG/OLKuSMnMjJ62sHC+aT4h1GePNj+FfNAFlGzbsU78Ly6Efh
      mXMf+rY/EHzrToS/HZCQs/LxXvU46vjIT6IIdqLX/gllZAHqObMTHqLkycC74FHCm8rpeWlR
      9CbBe/XTKKOnHHF/sPYPL3WBN5YReu93eK96PEZcxySN2F3NBNfeglZ6e69T/f8Vx1yWmg0b
      UMaVDjo16kzlfxlA27SbUVP7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
      rgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deYwcV57Y+W9E5H0flXXfLJIlkiJbUuvoFntaLblnxgNjYHs8ho31AoYN
      73+7wAK7NrB/zX+zsIFdeNfYgcf2uG3P5RnMqKcvtaRuta7WQYpXsVj3fVfemREZmZFx7R8l
      UVKLVxWLWSTzff4hWFkv34us/MWLF78X70mu67oIQpuSj7oBgnCURAAIbU0EgNDWRAAIbU0E
      gNDWRAAIbU0EgNDWRAAIbU0EgNDWRAAIbU0EgNDWRAAIbU0EgNDWPEfdAEG4FduoMfPx22SO
      P0sjO4sU6SOTiVLIq3jsMlsra/SfPU+mq+MWZTVmPnqHzvHn0LenUeKDdKTCFIsa8ZiXheuT
      nHjhZYIBn+gBhIdX19AQG5MfkivZ5BauoFVzbC8s0nX8aUJ+CV8ocstyLhJdQ4NsTHxAvgLZ
      uUto6i7b84sUV+co76xSLmuAuAQSHlKmXuTqex8wdPoszWoW03LxeDzUy1mMWhm16ScWDdyy
      rKXlufL+RwydfhKjsvNpWS96OUupUCTV3YVWLgMgiQdihIeRWa+S39oiEOvAJ5vgi2HpBXRN
      J97ZA7KPUDh467J6lfz2FsF4Bx7JRPLHsLQ8eq1OqneISm6XjoEhZEkSASA8fJrNJoZhtKQu
      EQBCWxNjAKGtidugwkNHXAIJQouIS6CHkFouUzftfZdzLJP5hUV2i1UAXNukUFbvqaxtGqxs
      7GAadda3c/uuO5fdoao3913OajZY2dyl2dDZ2Cnsu3ypUMR0DnYOz+ULKL/3e7/3ewcqLTww
      1y9eQHMVLly4TCjo46NLE5iyn47ErRM/n2lqJf77j94i09nFzOR1kGV++MYvkLxhejPJO5bV
      Szv84Z/+lFTUxy8uTROhzo2VPGatzEauTHdH6g6lXV7/yU/Y1WWM0i5XZ1dxrSbLm7t0d3Ug
      3aGkmtvgP/zlW6RCMu9fm8NnasxtltHUCjW1SiAWwyPf/h0++MV71GWwmgZb2zmuTExiyoG7
      flYAr73xjugBHjaO49C0LMrFIorT4JOJaTzhOAvLq/dUPt3Ric8ssl7QmZ1foXdgmMX5Ge7l
      HDnck2ByvUxnzE+hqrOyMMe1G7P0DwzcsZxRzbGUrTE7O8fS2g4RV+WDS5MkO3vu6Qs2lIky
      k9VJhTyUtDoLczPkd7e5PLeG7w5ffsdxMG2b7dUV1jc3mZ1fIhRPMjO3dtc6HcfGth0xCH7Y
      1Mp56v4E5wY6uVRVGR/oIxCO0Gyady2r+EM898w5RnvTbOdU0j395LY3GTp15o5nYQBfKMYL
      L3wdrWES9IBeKTI0OkpPOkY85Ltj2bph84//0T9EK2xz9fJVvPERXnxmlJ7U3c/C/kiCF7/x
      DKrhEFRs1FKekWPH6A420X1hZOn2LS9mtwj2DHCqP8GlqSVOHh8lEouSjt/9Umx2apInn35K
      DIKFw1UolEilk3cNuLvJZrOkOjJ3vPw5DCIAhLYmxgBCWxMBILQ1EQBCWxMBILQ1EQBCWzu0
      ALA1DafROKy3E4SWuGMizHVdtDfeRP/4Y6K/8ev4jp/AretIfj/VH/6I+N/7u9ilEnI4jLm7
      ixKN4h0cJP9v/x88mQzBr51DSaeR/H6wbZSODuxCEWQJ1zBQUinsXB5kGTkYQI5GsSsV5FAI
      a3sb78gI0h0SIQfhNmvYu1MomeNIgcSXjtXeuAiSjJweQ5IVJH/0UOsWHj53DABJkoj8+ndx
      VJXgM89Q/rM/R4nF8A4NAuDaNvWJ6zQXF4l89299ubAsAxK1d9/DtSy8vb34xsZozs9hbm4h
      +f0EnjxD4+oEbtPAOzBA8OvPoH/4EY6u48l0YGsawbNnD/WAndIqkuzBnP4xyApSpBPMBnK8
      D3v1Q5Seszg7EziVTbxn/yGSrBxq/cLD5UCXQEoigSRJ2Pk8bqOBHPzys5m+wUE8ySRSIIC5
      vo4kSQTOPkn11VcJnDmDtbMLlgWWjf/kCZRkEiSJxvXrOJqGU1WxdrNI3jun4A/Kzk2j9D0D
      gBzrRY5245TXkVMjuHYTKRBH6Tghvvxt4K6ZYNd1sfN5PJkMVrGEW9fx9PZibW0hRyJY+Txy
      OIwciSB5PEh+P3Y+j5JOY+3sgCTt9QD9/ZjrG/gGB7CKRexSCW9fH65p4hrG3nttbyNHo8jh
      MM3VNXyjI8i+ww0CR8uBayNFunDys8jpMey1j5E7n8Ct5UBWkMMZ7J1JlMEXRBA85sRUCKGt
      idugQls70HRo13XRP/oYc2WF8EvfpnF9ErtYJPztX0OORCj/yZ+S+p/+BQDVH/wQt9Eg8p2X
      0N5+B0lRCJ1/Ee3Nn5H4J/8D1b/5AcFz5/CNDB/iYe2xc7M4uRnkzlM42WlQPHhP/hbW0jug
      eJHjA1iLb6EMv4hby2GvX8T/4v+CtfoBrl5ECncALvbGJ0jhDuRIN3JmHDnWc+htFY7GgXsA
      c2UF//g4+gcf4lQruIaBaxjo7/8ST2cnfHpl5VSrOLqO0zRxNA1b03AbDRxVxc7lPn29dmgH
      9EWSL4xrNcFq4Gi7uNreo35OcQm3Xsap5ZAzJ7G3r4HkwXP8u3uvVzbwjL6Eq2VBUvAc/y5u
      s45TWUeOdj+QtgpH40ABIEkSke/+LRxdRwoGcU2L8K99i/rVa5gbGxgzMzRXV8F2kKNRAmfO
      0Lh+Hf/4OEoyiaNp+E89QfXHP8F/4sRhH9NN9voF5OQQcmIQ39P/I3LXKayld1B6n9q7BeoN
      gWMjR3tx6yXkzDj21lWUnnNYK++h9H4Nt15G7jiJnBxC6fs6TvnuTxsJj44DD4Ib1ydprq8T
      eeVljJlZzNVVIq+8ghwOYczN4R0cpLm4iF2t4lSqhF/6NrX33kf2+wmcO4dT0zA3NvCNjYFl
      7fUaD5jrOtCsiQSXcJO4CyS0NXEXSGhrIgCEtiYCQGhrIgCEtiYCQGhrIgCEtiYCQGhrRxAA
      LgvTk1y5NknTcg7tXa9NTNy2vsXZaXTDwm7qTE7P3/K3tpfnyFbrh9aeh51l6Fy5dImFlY3b
      rhv6yftvcvHaDTZ3vrxadK1SYGltC4CNlXkKFf2u9a2tfzWDrpVzXLp0icXVza+0wahVmFvc
      Ww91Z2OFnUL5lu97+7/7vTmC1aEd/vh7f0xXJsZr737C18aHuDE9TzIZJVfU8NKk2rDJbizT
      cL24hkY2l6esGbhNFbwh8tkdwiE/N25MEU2m8Soyb775JiGfgi8UI5fLEQkF2M0ViUQC/Nc/
      +L+o+3swd6f5w1ff4tfPf52pG5NIvjBGrYSq1pi7fgU33o9dK+NTXKbnlknEgvz+7/+fdPUN
      0ZFK3P3QHiFqdonv/+wTyusT6P5OfFiUVZ1GtcBOUUOxNf7kL37Miy88TbZY4q/+23/ECaTp
      686wcOkt/uiHH/KdF5/mP/3fv4+ZGCOMyvpOkY5EhN18gXK5CladxdV1fIEwK8uLhHw+8vld
      ak2IhoNMf/wGUzm4/s5PiPUN4/MGqJcLSP4QxeWr/Os//D6vvHyev/7ev2WzEaY7qrCwuk0m
      kyK7m6VUKvPxxQuMHxuiUrcp7a5TNVw2rr/Nn71xmRMnxgj67jzf8wgCwOWt135Mud5kcOwJ
      Lr79U7weuDS9wdyNCapbS1Q0lQ8nVrj8wfv43DKfLJX48P23kbQtfN3jvPGDv2ZrYYqGrPDu
      h9d45twpLn/4LoFIlJ++9TFbC9fxyQbLFQ8jvUkWV3YwGxpq3SLgg5ND3bz+87d5452P8ahr
      XFtTSXhNPrr4Cb5kN++89iqya3B9KU9ue43TT5577ALAUAv8+PVf4EoyJ4a7+OM//wFDvTF+
      +PoHFNcmMUIZtpZXOXNykAs3VjAqWXpHxunvyZBfn6NmSsiOQd2WCaUHKCxd5bUf/DXJvhH+
      43/+b5wcH+Mv//yvkBpZts0E85MX0baXWVcd3n7nbV58/ll2V2d4//IsmmHx8gun+NHPLrA4
      M8GZs19DL2yg1QxsRaJeayKHkpiFNX72+g8wowP8zff+Pd0nnmRt9hpXJqY51hfn1Tc/4cbF
      j+juSbJRMDl3ZvyuAXAkY4DOwROcGe3B5w+gVQpMza8RTyRIBVzmKy6DCS/zMzfwKAEsSeG5
      b5ynIxFBkSSuXvyQrXwVs6ExcX2GaGxvXo+keJBcC8Xj5eUXv8Yf/OnP+eZTY58epZcwNere
      KAoweekj4j2jBH0SssfHb/zt3yIa9CIrCpZlohZzzK1sk0gm6UxEsA/vSu2h8vy3f4P/7V/+
      K0a6ojzzjW9zrL9r7wXXJZbK0N8/SE8mCbKHvu4MTcu+ealy9qmv8Zd/8RPOnhoBS+XK9AZj
      w700DJPTT3+D08f6sFywLevzCpUg3zx/nnjYf/NHJ06fYySlsGunkIpTSLE+fMreQgijZ7/O
      T/7sTzj71JOAy4Ur1xkfG8FoNBh54mmePXMcAFkCy7RYnp8GvHT19WM2De5lTfgjmAvksr21
      Q09PNysrK/T2ZJiaXmD0xBN4LI1i3aW/K83a0hxNJUxnPIASSlAt5uhIxphd2iCZiNHTlWZq
      coquwWNkklGKuV02t7Mcf+IUm7OX+HC2wD/5nb8NuOzuZIkEFBpSkKZeJZOKM7u4TjIVJ+CB
      SLIbo1pADsUo53bpSMWYnltm7OQTuI0KW0Wdk8eGWvsxPWCWoVPSmmTSCSxDp6LbpJNRsltr
      qKbC6FAP2Z08mY442ZJGKuJjbnmLU0+cpF4t4PhjlLLbdKbj6JaXWnETPAHiiSS6YdLdkeRn
      P/pLJq5P842/+88ZTsj4PQqRVAf57C69PT1o5Ryzi2vEUl2M9Kb4k//yR3znH/wzBlMhjFoF
      3fGhlXJ0d6Yp1UxsvYSJh0gsiVnX6eruZGd3l1QsREl3sLU8VVPh5LEhFmZu0Dl4/EvBdiuP
      5WS4tZUluvuH8XnETa6jtL48h2Z5GR8b4W6r21iGzka2zPBAb2sa96nHMgAE4V6JU6TQ1loa
      ALa9/50PAawvDqTukeu6B6rvIHU5joPj7H+kfJC6DpPjONzqAsC27QMdDxz8mA5azrbtWx7D
      vTAMo7V7hNn6Mo2dV/ddznXdAyyR6OK67Lvcger67A9wH3X5On8Tb/zJ/dUr3JfrRau1AeBa
      NWxttpVVPjLc1DeOugltp1S3xRhAaG/77gHWVxbRajUyvcMYjQZmU8eoaXT2j4BjUtxZJxiN
      UizbKB4bBRetZnDu6cNd5PZOGobFa++u8eyTnSxvqEhArW7y6+cHeP29dY4Nxllar+D3KZSr
      TX77lWGuzxXJl+q4Dri4BPweTh9PkooHWtbuw2Q3VC5OzHD8+AnCwQCOY1Ov66haHauuEu/q
      Jx2/+zamj7t99wCeQIiBnjQzN6bZzu1NkgqG49QqRVRVJRzvQK/kaRhN+gcHUSQX07Fp5Qqb
      jgt+n4JWM+lIBhgbipMrNnCBWMTHxq5GT2eYbz3by8hAFFmW8CgSz53tpCsT5OzJNFvZGsHA
      o7uNsuQN0t+ZYG11hfWtTZaWN5Bx2Fpfw5ICJBNiZQw4QA8QCwUoaE1eePYs67tFujvTSJLM
      3qDTRZYkUokofbKf/M4WvYMjDOJg2q1LNwR8Cj2ZMOlkgNnlMn6fwnde6GNhpUImHSQd9+P1
      7sX+2FCcctXAshy2szrDfVECfg+//fIwluXAnROJDy1JkrDxMj5+gmw2T99oLwGvTP/QEOlE
      lEpFIxkLH3Uzj1xLE2FG6RrGyv/bquoeKYHBf4ovfb6ldTqOgyRJX7nrZds2kiQhy/sfIlqW
      hcez/57zoOVs20aW5QNtpPLmUlUMgoX21tIewLZtFGX/o4GDnB1c18VxnH3Xd5C6Pksa7feM
      edCz3mFp9x5A13XRAwjtS1GU1ibCHCOLVbm4/3KOg32rs5Hkwd/9W4fQMqEdzRcbrQ8AY+cH
      h/eGckAEgHBga5orLoGE9nbgHsB1HKZnZ0mFZYgM0p0KfvFFCqUK6VQSgLqu4w+FAKhqTRZW
      K/i8CpblYJg2Pq/CmRMp3vpwg3QyQKli8MzpDB9f2+U3f22QD6/u4vPKlKtNujtCyDJ0poN0
      pB/NLG0rbG+sUaxqHD/5BD5FQlNVIlGR/PpV93UJZOg1dI+X3PYybleYgtlAL1eJROOYdZVC
      Lsjc1AxdJ5/i2VMjwF4mNhTwIMkS2WKdTDKA47o0DItjg3HmVyqYlsPPP9zcS1DZLvWGhV6H
      /u4wuWKD+ZUy//Tvjx/KB/C4ajabSJLM1JWPUC0Pfhmi4QCO4qO0tUzH0FlOjIjdbg4eAJLE
      sZF+dFNiKAL5fJHe4X683X2AQ3bHIRZPcvyJcYKJ+M1ixUqDtW2Nge4I0bAXRZHwKQq7+To7
      eZ1TY0lWNlWefTJDRW1Sq5ukE4GbPcBIf5Tx0QT5UoPOTPD27WtzqUw3Q9EIW+srpOQAblMn
      nsrgkR1CHplQPHTUTXwoPNqZYDlA7Ny/u+VLIg9wd+2eB/jJfFkMgoX21tLTjxIeITT2v++7
      nOPYyLfasV0S8Ssc3FMZb2sDQFLCKNGT+y531JcKwuMp7pNa/EikXcPSt/ddznFsrC/0AJIn
      jBLsP8ymCW2o3HRb/FB8bflQBsGe2DlCx/7nQ2iR0M6uZE0xCBba2z0FgOu6bGxsoqrqbX/H
      UFWae7+Nqmpfek1XVWzAcVwuTeYoVQ3eubDF0nqVD6/s4Lou12byzC6X+eDyDktrVX7x0Sb5
      UgPHcbl8I0e9YTE5VyRXrLO5Wzv4ET+C1GKOqdk5iqUKX1ytR7vD3wOgpqo8puv6Hpp7ugQy
      awV2CyqO02RxZYOOqJ9CRSUSi7E6N0XP8EkaxRKJ/hQbm1XSYYlQPM3q7CT9Y2coZrOce/4Z
      ZFkiHPQQC3vRdJNU3E+5aiBJEvGIn+WNKn1dYWr1vWd5kzEfi2sV1JrJ7HIZ03L4ydur/M7v
      PPWgP5eHSl3TaBgNCrs7bG5uk+pI4sElt7NJNJlhfmaa0eMnqOkGkq2i217sRoPurjTa2iaZ
      TBy1qhMNeJm4McPYieOEowkyqfjdK3/M3VMAlKo6EW8T3Yoy0Lv3ofVH47iuSVfPAJGgFysQ
      wHYkkvEwPtkCxyDR1YNZb+APBJCBpu0wu1zGclwCfoVPJnNEQl7WtlQK5QahoIeVLZUTw3Fs
      26VWt7Adl3xp77V8scH5r/ewm6/T2iVUj5bX58OneAhEY2QCPvKlAqYt4/N5Ma0mmUwXksdH
      f0+MYlkmEYxRzm6BL0J/wkdVq+CRXCxZIdPZhewN0tWRPPDqb4+TI88Eu65Lw7D3tQLDvQyC
      RSb47to9E/zjuYcgEyxJ0iO9/IjwaGvpN0/2d+Lv/u19l3Mc50tnI9nfdZjNEtrUaMLT+gDw
      9uw/AI76UkF4PA1F5KO/BBKEo9Lyh+Kt6iS1O2SC/b3/AH/Xb7awRUI7e3O1LnoAob3ddwDU
      tQoLy2sYTeO2v9NoNIC9XSs/uZ4lX2pwbSaP67rU6iYzSyU2djRKVYOJiQmazSaGYXD16lUa
      jQaTk5PUajUqlcr9Nvfx59osLy6g1XQM8zY75Lg2DcNsbbseSocwGa5QLGBUyixaJrIkkQh6
      sCQ/hlYimuqgUijgeAOcHB3CNG2W1quEQ16W1lVG+mN8cGWHwZ4Iu/k6G/UZcnWNarVKMplk
      fn6e1dVV+vr6ePfdd+nr6+Ps2dYts/5IshsUyxq4a+RVg4HeHsqVKvFoEN1wiHhdZK+HWtPH
      YG/qqFt7pFz3kG6DOo6FrPiJBxUqpTwmXsyGim01mZmZJXXsKU6yd8+/IxXkxnwRSZLIFeuk
      4gFmlytEw16SqSj96X6i0SiVSgXLskin08zNzTE+Po6maXdti7CXBGw2m/T395DbzGJi0TQa
      IHnIFjeRghG6e44ddTOPnG1bDygT7DqoNZ1o5MsbMPxqJjhb0OlMf/5w9u0GwWJt0PunairR
      yJeXRWn3TPCPHlgmWJK/8uW/lS9++YUH61e//MKe1j4S6QmjRG7/SKTsa+9rUqG1Ej6xPPqh
      1PUoXALdSrtfAhmGIfIAQvuybfsh2ihb8hAe+19b2RyhzV3KNh+ijbJlXyubIgiUDbE8utDm
      7qsHcOwGFy5O0d2TxidDorOX/PYGiVQHFVUjk95bHt2oa/jCSRzL4a9eX2J8NMH6tsYr3+zn
      0mSOqtakuzOGvvsG9Xqd8+fP4zgOP/3pT3nuuee4evUq4+PjNBoNnn/++UM58HawvrqIq4Tw
      YpHq7CSbzVOrFujuG8JxFRKx9r4NXVMr99kDSNCZjJAtqZRLeW588jGSx2V6LY9b11nd2WF9
      Y51svkLQp2A7LuGgh52cjt6wqGpNvB6ZRMyPR5F56qmnKJfLzM3N4ff7SaVSWJbFCy+8wNbW
      Fj6fuEzaj1KhAFaDuuNw9ZPLRBIdBCNxapVdqlrjqJt35Dze+1waUZJ89I+MkK7r6JpK/1CQ
      ix99wtD4KWSfn26/hOF6iUf2zjQ+r0xXR4jjw3EWVisUSg2ODcZQaybFqk2hUOCFF14gk8mg
      aRpdXV2EQiHW19f51re+hWVZh3Lg7eLkmXPYlk2lWOBrX3+abDZPd1c34BzGNLBHnuu4R/9Q
      /E2yj9i5/++WL4k8wIPR7nmAH86WxCBYaG8iE3wIdYke4HOPUg8gNsoW2t7RbJQtyfi7/04r
      qxaEr1iu2q3tAT7bKNvY+XErqxWEW5oviuXRhTZ3aAHg6AXWdnJU9ebNnxmVAqq1t1G2w97y
      6O9d3GZzV+W1115D0zQuX77M22+/zZUrV8jlcrzzzjvMzc3hOA6vvvoqi4uLfP/732dpaYnJ
      ycnDau5jaXF2Cl3XuD49/5XXCsXC5/9xbfT67RcxaAe2bXPjkw8ObwzgWgZzywXGe6ss5lT8
      ES8RWWJXXUIJd/L0+BCyLJFJBTCaDnpTx7Is6vU6mqZx5swZLMsiEolgWRYXL15kYWGBV155
      hdHRUaamphgaGjqs5j6W/H4vi4ureIMeVlc20St5Ko06HsVHMBxkY2MXS88hBWOk0gNt/VC8
      oigEgsHDCwDJH+W5J+OolQqhhEwy4sW2JE73D1Cq7S3PYdsO6zsa/T0eEokEKysrpNNpPB4P
      y8vLANRqNZLJJENDQ/T39+O6LmNjY/T391Ov1w+ruY+lRLobxa8RDAYo5rKEUxl6ExFkFzS1
      SsOW8MQCyD4/4Uh7zwNqNps0dP2IMsGSl9jX/uCey4k8wIPR7nmA708VxSBYaG9Hs1H2AaJV
      EA7bsz3+R2OjbEF4EDpCLd4f4OZG2ZKEJ3KilVULwlfkauYRbZS9z0GwIDwIH2w2xCBYaG/3
      0QO4bG+sgd9PNJgiErn944p1XccfCt3cKHtsOMXFn/+cb33rW2xsbFCpVBgdHWVzc5NCocDo
      6CiyLHP16lXGxsZu/qzRaDA4OHjwJreBrY114okYnkAUv0ec327n6tWrbKzUDh4Arutiugp9
      qRCXL04SiwdZXM/yxFgPluvFrFeJJtPMTEwwdPppTgyGbm6UXawYlBolGo0GlUoF13WZnZ1F
      lmX6+/sB6OnpYWtrC03T8Hg8fPzxx4yMjBzaB/C4Mg2dpaUiwVCIrbzKQDqELSvUdQO/308s
      kUBXVcLxZFtvlN3f34+8vnDwSyAJCduokS2ojB4fQ5Fkjo0OEU2kScUjdPX247UNunp6MJqf
      Z4Jnl8vkiw0ikQgrKytIkoSqqpimyc7ODpcvX6bZbFIul0mlUvj9fkqlEmfOnBEbO9+DSKKD
      gFfGcSWS8cin0000DMPCo0hsbG7iDUbo6kgedVOP1IULF3Ad52gzwbquEwrdPSUvMsEHt7O5
      RjjRgc/rw+/7cl3tngn+i+v5o10a4F6+/ML96e4TY6Y7OZqNsiUxOBOO3nja92hslC0ID8JY
      wtPaPIBr17DUWVxbTGsWjl6h4bQ2AOzaMvrCv8FubLeyWkG4pQ82RCZYaHP3PQZQNRWzaZJK
      3f3xus8ywU9mSlz7aC8TvLq6iqZpuK5LMBgkn88zOjpKPB7n8uXLHDt2DMMwiEQiIhN8K5bB
      9MISXT2DpOJh6lqFminRkYyh6zo+GXJqnaBXQasU8fjDlEoF+oaOEQl4j7r1R6JSqXDx4kXM
      5Kn7D4DNlVmCqRGWP3yHREcXlVqTSCxJs6aS6EzhcaFSLDA4Nn4zExyLxdC0DUzTpFAoIMsy
      hUKBaDR6MxN8/fp1TNMknU6zuLjI1NQUw8PD99vcx49tkOgcoJLb4PJHi3QPjICksLuzQzoZ
      IxkMksvtEPJK+MJdJIIy27kGalUnEmjPTHAsFiOVSrFtH8IYINMzjMepE4wmUCSbodEhmvU6
      kixj1KoUKiodXb17y6N/mgm+MbNEIBBgcXGRVCqFqqoEAgGAm5ngzs5OTNNkYWGB2dlZnnji
      CZEJvhVZIbu5ijcQprt/iGQ8SjyRorczjQtIHg8Dfd00bC9NNUtRbdDT1UMo1J5nf4Dl5WWy
      2Sy6WnkwmWDD2Jt38pWff5oJDp34P/CER0UmWDwTfN/l7icT/N8n8g9mEHyrL/+tiEywcNRa
      ehfos0yw7G3viVjCw+F4QhGZYKF9ne4KiTyA0L5su8WrQ1vVSYzd11pZpSDc1t/M10QPILS3
      ew4A13X31lNsfL69pmMamF+5Ne9iGM0v/cQ0DBzAaNq8+8EE2WwWgM3NTTY3N1lYWGBnZ4f1
      9XVc1+Xq1avUajUuX75MrVZDVVWRA/gVNbWKZdsYzdvvnNk0jJv/fvle91f/Ru2kUqkwPT0N
      7GcqhOsyee0yUiDC6OAAtlFjc3WdxPAYdqOBxzHw+EMYlkuttEuis49GtUg82cHS4grnnn8G
      v09hdDCF67qUSiV+8Ytf8NJLLzE3N0e5XOb8+fPUajVmZmawLAvHcfjoo49QFIWXXnrpAX0c
      j6bdrTVCyQ621nfo6e+hnMsj+/ykElEMGyy9iunK4Dp4ZQnDVUhG/Niyj3olh4f5gWAAAAiW
      SURBVORLMjTQedSHcSRs26ZYLOKG0/u7C9Q7MIxhNMhuLiMHEiBLrK8sojccnhgZQC1sM79V
      Zbg7jlrOMj87S7rrGL4vJFRyBZ3eUzFu3LhBrVYjm82iaRodHR1MTU3dzPguLCzg9XoZGRlB
      07QDb7D3OHKaOoVqHd3cpWewj2qxTCKRAMllZmYGORAi6g/gURzmpxcZHD+B7LosZzcwbIlY
      PEbi3lI1j6WJiQls20Z3qwfIBLsuWzs79Pb07Ltio3QNmltUpGdIp9P3/IUWmeAHo90zwX92
      LXeAPIAkHejL/0Wdne3Z9QoPn9YujusJI7ntuyuJ8HDpjHhbvDx6aARFGWtllYJwW9/o8Yk8
      gNDeWvtMcH29ldUJwh39ctNocQ9g6y2tThDuZFdriksgob0d0iDY4fqVq3jCMUJeBY9rY4Zi
      eAydZEeGXKHM8GAfLvDqq6/y7LPP0tnZyfe+9z1efvllJicnkSSJWCzG+fPnef3116lWq4RC
      Ifr6+jAMg29+85sHui/dTnY2V1EbLtgNEh092A2VWCJJLl8ilYig6iZemvjDUSxbJhFrvweS
      NE3jwoULvPzyyyxNXj7cHiAW9pHPbVMoNkmkorj4WF9eZGNxCR0olXWy2Sz5fJ6rV69i2zaN
      RoPnn38er/fzZ1RTqRTHjx+nXC5TLBYxDEN8+e9B03QY6O/F5w9hlLdZWF5nZXkZFInN3RK2
      3aRcKrK0OEdVa9z9DR9DkUiErq4uAGrVQ3sm2MUwTHw+D5ubG6STacqaTjqRwLZ0sgWN/sE+
      7MoUbuAYa2tr9Pb2Yts2u7u7lEol0uk04XAYj8fD/Pz8zY0xBgYGaDabxGKxfWV12zET7FhN
      NrZzdHZmkHAp5nYIxdME/D4cx0WWoFoq4AtF8PuD+LxK22WCK5UKV65cYWxsjJ+uGK1dHr1Z
      mcIXP7XvcmIqxIPR7lMh/vjKrhgEC+2tpQGgRMQewcLD4++fjIoeQGhfiqK0NgCcZqGV1QnC
      HV3d0lq8P0Az38rqBOGOpvMiEyy0uQPeg3MpFEqk05/P7Xf0AhUpTTJ4+1KmZfP+W28xOjoK
      wOTkJN3d3ZimSX9/Pzs7O5w9e5Y33niDsbExarUaHR0dVKtVzpw5I5Jhd1AoFL/09wAoFAuk
      U+kjatHDx3Vd3n77bb797W+zvb3NlXd/dvCpEM1mk5XVVQCshkbELzOb3aEvqVBr2ChuE8Xn
      o9mwkIDjZ87i8SgEAgFs20ZVVU6ePEmxWGRxcZGZmRmi0SgjIyOcPn2aWq1GMBhka2uLRqMh
      vvx30Ww2waiykq9S3s0TiKeoFTeoaf1kt7N4I35cyyEaDVNVa3Rmeujp7jjqZreUJEl0d3cD
      UCgU6Bs9efAAaNSqePxBylqd7mQCx3U5ORzC6/PSrUCpkMUXSWGbDSQg6JGoGhaGYVAsFunp
      6WFxcZHBwUFCoRCnT59me3sbWZZZWVlhZGSE6elpzpw5g+u64qH4u/ArsJatYupVMt3dNBpN
      xk6M06ibPHFqnFpdpaI2iUcDxMIRgon2W5/VcRzW1tbwer10dXVR+OV7IhN8GHWJTPDnHqVM
      8PcubotBsNDeWrs8enCgldUJwh19ZyTS2gCQlPabfy48vDKhFmeCBeFhkqu1eHl0QXiY/HxJ
      FQEgtLdDuwenlgtsFVROHhv+lVf2nhbz+31YlsW7777L6dOnCQQCXLt2jd7eXqrVKq7rEo/H
      GRwc5L333mNoaIjV1VVOnz5NvV5ncHBQJMN+haaqyNh4Qgl8n97tVVWVaDT6pd+rqSrB6Ben
      /jqoap1w+A5p+8fQxMQEwWCQsbExfvnLX5LP+w4vAJpNA1yXnd0dcKFSKuBVZLbLNTyOzVPP
      Po/H46G/vx/XdW9uhF0sFlEUhUKhQCgUotlsks/nKZVKPPPMM1y4cIFoNCo2yb6Fnc01KtUq
      6d5jhPwulUIRy7FZW1ljeOwEoXCQ2clJBoaHsRwXj9NAd3wEPS7+ULrtAuCzGQjlcpmNjQ2U
      8InDuwTyeLyYRpP6Z5tjd/bg8XpJxhJ0pPZ2JK/X61y7do1CoUBnZyfNZhPTNNE07eaG2aVS
      iUgkQkdHB5OTk4yPj5NMJrFt+7Ca+thIZboZOzZCNADlWhPXBZ/fT//QMJFIjHQ8TKajC8Xj
      2Ut4eQKE/R5cJPz+9tsoW9f31qWybZt0Ok1hd7O1meDPpjPc6wbZnxGZ4DurVkqEogk88v6y
      oe2eCf6jj7dauzjuZ8QG2YcrFm+/eT2HRYwqhbb1ZLfYJ1hoY6czYnl0oY21/KF4QXgYbFcM
      /t27a5imJQJAaG+3DIDdrXWyhTLGpxstA1iGwZ3vxN/b5sufbYI9MbG3YfZnGxYvLy+Ty+WY
      n58nl8tRr9dRVXU/xyIAlmlgGAZNS+RNvqhSqbCysgJA06ijqxWuT16/9W3QYqGA4zPIb2rE
      OzsJB6Jo25sUZIn+jjRa3UQyayjBGGatgj8UwXQltPw28Y4MXsWPhIMtSZiWi2toZPqGsQyd
      mZkZ5ubmME0TSZJYWlpifHycqakpfD4fm5ubvPjii7z++uv87u/+bis/o8eCVtxhMdvgWF+a
      bd1EMjU8gQhapUI4niAcCmHUdSSP/2aCsh3Mzs7iOA6Dg4NMXp9gbXaduY47zAZtGgbJTBey
      U2d+eopCpYbb1FlcXmVyag5vIIJkVrhy+freg+3L6yQzPchIrG+usbaxSXlnlanZeRRviKBP
      ubn7e3d3N+FwGMdx0DSNUqmEaZoYhkEikWB2dpa+vj4qlUorP6PHguzxEQ36WFtd4fr0HN5g
      BMnWqWoNCrtbTE5PU1IbZNLtkzuYnZ1F13WKxSLFYpFCvoDZaJBOdxxNJni/RCb4PjlN1LpL
      NPzl7eHbNRO8XTH4q2u7/PPnOo8mEyy0mOwjGj7qRjx8bMvm/wdz4fjhKWf63wAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit margin by Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='60' name='Revenue' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue By Markets' width='192'>
      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
      3hl7zRpNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue dashboard' width='192'>
      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
      43KbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='62' name='Sales Quantity' width='164'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity by Markets' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customers' width='192'>
      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
      QfP/A4DNF0nzr/sLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 5 Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='38' name='Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
